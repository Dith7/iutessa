# Generated by Django 5.2.5 on 2025-08-15 12:43

import academique.templatetags.academique_tags
import django.core.validators
import django_ckeditor_5.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('academique', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='PageBlock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Titre')),
                ('subtitle', models.CharField(blank=True, max_length=300, verbose_name='Sous-titre')),
                ('content', django_ckeditor_5.fields.CKEditor5Field(blank=True, verbose_name='Contenu')),
                ('block_type', models.CharField(choices=[('hero', 'Section Hero'), ('about', 'À Propos'), ('contact', 'Contact'), ('news', 'Communiqués/Actualités'), ('gallery', 'Galerie Photos'), ('documents', 'Documents/Fichiers'), ('videos', 'Vidéos'), ('testimonials', 'Témoignages'), ('services', 'Services'), ('stats', 'Statistiques'), ('team', 'Notre Équipe'), ('custom', 'Contenu Personnalisé'), ('academic_filieres', 'Filières (Public)'), ('academic_admission', 'Admission & Inscription'), ('academic_frais', 'Frais de Scolarité'), ('academic_documents', 'Documents Requis')], default='custom', max_length=50, verbose_name='Type de bloc')),
                ('order', models.IntegerField(default=0, verbose_name="Ordre d'affichage")),
                ('status', models.CharField(choices=[('active', 'Actif'), ('inactive', 'Inactif')], default='active', max_length=10, verbose_name='Statut')),
                ('image', models.ImageField(blank=True, help_text='Image principale du bloc', null=True, upload_to='blocks/images/', verbose_name='Image')),
                ('document', models.FileField(blank=True, help_text='PDF, Word, Excel, PowerPoint, etc.', null=True, upload_to=academique.templatetags.academique_tags.document_upload_path, validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf', 'doc', 'docx', 'xls', 'xlsx', 'ppt', 'pptx', 'txt', 'rtf']), academique.templatetags.academique_tags.validate_file_size], verbose_name='Document')),
                ('document_title', models.CharField(blank=True, help_text='Nom affiché pour le téléchargement', max_length=200, verbose_name='Titre du document')),
                ('video_type', models.CharField(choices=[('local', 'Vidéo locale (upload)'), ('youtube', 'YouTube'), ('vimeo', 'Vimeo'), ('embed', "Code d'intégration")], default='local', max_length=20, verbose_name='Type de vidéo')),
                ('video_file', models.FileField(blank=True, help_text='Pour vidéos locales (MP4, WebM) - Max 50MB', null=True, upload_to=academique.templatetags.academique_tags.video_upload_path, validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['mp4', 'webm', 'avi', 'mov']), academique.templatetags.academique_tags.validate_file_size], verbose_name='Fichier vidéo')),
                ('video_url', models.URLField(blank=True, help_text='URL YouTube, Vimeo ou autre', verbose_name='URL de la vidéo')),
                ('video_embed_code', models.TextField(blank=True, help_text='Code iframe ou embed pour vidéos externes', verbose_name="Code d'intégration")),
                ('video_thumbnail', models.ImageField(blank=True, help_text='Image de prévisualisation', null=True, upload_to='videos/thumbnails/', verbose_name='Miniature vidéo')),
                ('link_url', models.URLField(blank=True, verbose_name='Lien (optionnel)')),
                ('link_text', models.CharField(blank=True, max_length=100, verbose_name='Texte du lien')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Bloc de page',
                'verbose_name_plural': 'Blocs de page',
                'ordering': ['order', 'created_at'],
            },
        ),
    ]
